name: CI

on:
  push:
    branches: ["main", "master"]
  pull_request:

jobs:
  build-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build & test backend
        run: mvn -B verify

  build-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm ci
      - name: Run unit tests
        run: npm test -- --watch=false
      - name: Build frontend
        run: npm run build

  postman-tests:
    runs-on: ubuntu-latest
    needs: [build-backend]
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: productdb
          POSTGRES_USER: product_user
          POSTGRES_PASSWORD: product_pass
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U product_user -d productdb" --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Build backend
        working-directory: backend
        run: mvn -B package -DskipTests
      - name: Start backend
        run: |
          java -jar backend/target/product-management-app-0.0.1-SNAPSHOT.jar &
          sleep 20
      - name: Run Postman collection
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install newman
        run: npm install -g newman
      - name: Execute Postman tests
        run: newman run postman/product-management.postman_collection.json --env-var baseUrl=http://localhost:8080
